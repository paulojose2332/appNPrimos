{"version":3,"sources":["App.js","functions/index.js","reportWebVitals.js","index.js"],"names":["withStyles","theme","root","backgroundColor","position","width","height","justifyContent","alignItems","borderRadius","mainGrid","display","alignContent","component","componentGrid","margin","props","classes","useState","value","setValue","isPrime","i","checkNumber","Paper","className","elevation","Grid","direction","spacing","justify","container","item","noValidate","TextField","id","label","type","variant","maxLength","onChange","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","renderReactDom","ReactDOM","render","document","getElementById","window","cordova","addEventListener"],"mappings":"0PAsGeA,mBA3FA,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJC,gBAAiB,QACjBC,SAAU,QACVC,MAAO,OACPC,OAAQ,OACRC,eAAgB,SAChBC,WAAY,SACZC,aAAc,OAGhBC,SAAU,CACRC,QAAS,OACTC,aAAc,UAGhBC,UAAW,CACTP,OAAQ,OACRD,MAAO,SAGTS,cAAe,CACbC,OAAQ,OACRJ,QAAS,OACTJ,eAAgB,SAChBC,WAAY,aAkEDR,EA5Df,SAAagB,GAAQ,IAEXC,EAAYD,EAAZC,QAFU,EAIQC,mBAAS,IAJjB,mBAIXC,EAJW,KAIJC,EAJI,KAMZC,EChDO,SAAqBF,GAChC,GAAKA,EAAL,CACA,GAAc,IAAVA,EAAa,OAAO,EAGxB,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAOG,IACvB,GAAIH,EAAQG,IAAM,EACd,OAAO,EAEf,OAAOH,EAAQ,GDuCDI,CAAYJ,GAG5B,OACE,cAACK,EAAA,EAAD,CAAOC,UAAWR,EAAQf,KAAMwB,UAAW,EAA3C,SACE,eAACC,EAAA,EAAD,CACEF,UAAWR,EAAQP,SACnBkB,UAAU,SACVC,QAAS,GACTC,QAAQ,SACRC,WAAS,EALX,UAOE,cAACJ,EAAA,EAAD,CACEF,UAAWR,EAAQH,cACnBgB,QAAQ,SACRD,QAAS,EACTD,UAAU,SACVG,WAAS,EACTC,MAAI,EANN,SAQE,cAACL,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,sBAAMC,YAAU,EAAhB,SACE,cAACC,EAAA,EAAD,CACET,UAAWR,EAAQJ,UACnBsB,GAAG,iBACHC,MAAM,4BACNC,KAAK,SACLC,QAAQ,WACRC,UAAW,EACXpB,MAAOA,EACPqB,SAAU,SAACC,GAAD,OAAOrB,EAASqB,EAAEC,OAAOvB,gBAK1CA,GAAS,cAACQ,EAAA,EAAD,CACRF,UAAWR,EAAQH,cACnBgB,QAAQ,SACRD,QAAS,EACTD,UAAU,SACVG,WAAS,EACTC,MAAI,EANI,SAQR,cAACL,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,qBAAKP,UAAWR,EAAQJ,UAAxB,SACGQ,EAAO,mBAAeF,EAAf,8FAAmGA,EAAnG,8CEjFPwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDRQ,EAAiB,WACrBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,UAG/CC,OAAOC,QACTH,SAASI,iBAAiB,eAAe,WACvCP,OACC,GAEHA,IAMFT,M","file":"static/js/main.b337bcf9.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Grid,\n  Paper,\n  TextField,\n} from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles';\nimport checkNumber from './functions'\n\n\n//I used the css style of Material ui because i like to be able to have it in the same file, and it makes changes easy\nconst styles = theme => ({\n  root: {\n    backgroundColor: 'white',\n    position: 'fixed',\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: '0px'\n  },\n\n  mainGrid: {\n    display: 'flex',\n    alignContent: 'center'\n  },\n\n  component: {\n    height: '50px',\n    width: '300px'\n  },\n\n  componentGrid: {\n    margin: '40px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n\n});\n\n\nfunction App(props) {\n\n  const { classes } = props\n\n  const [value, setValue] = useState('')\n\n  const isPrime = checkNumber(value)\n\n  //The layoyt was made using basically material ui alone https://material-ui.com/\n  return (\n    <Paper className={classes.root} elevation={3}>\n      <Grid\n        className={classes.mainGrid}\n        direction=\"column\"\n        spacing={10}\n        justify=\"center\"\n        container\n      >\n        <Grid\n          className={classes.componentGrid}\n          justify=\"center\"\n          spacing={2}\n          direction=\"column\"\n          container\n          item\n        >\n          <Grid item>\n            <form noValidate>\n              <TextField\n                className={classes.component}\n                id=\"outlined-basic\"\n                label=\"Informe um numero inteiro\"\n                type=\"number\"\n                variant=\"outlined\"\n                maxLength={8}\n                value={value}\n                onChange={(e) => setValue(e.target.value)}\n              />\n            </form>\n          </Grid>\n        </Grid>\n        {value && <Grid\n          className={classes.componentGrid}\n          justify=\"center\"\n          spacing={2}\n          direction=\"column\"\n          container\n          item\n        >\n          <Grid item>\n            <div className={classes.component}>\n              {isPrime ? `O numero ${value} é um número primo, ou seja, divisivel somente por ele e por 1` : `O número ${value} não é um numero primo`}\n            </div>\n          </Grid>\n        </Grid>}\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default withStyles(styles)(App);\n","export default function checkNumber(value) {\r\n    if (!value) return \r\n    if (value === 0) return false\r\n\r\n\r\n    for (let i = 2; i < value; i++)\r\n        if (value % i === 0) {\r\n            return false\r\n        }\r\n    return value > 1\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst renderReactDom = () => {\n  ReactDOM.render(<App />, document.getElementById('root'));\n};\n\nif (window.cordova) {\n  document.addEventListener('deviceready', () => {\n    renderReactDom();\n  }, false);\n} else {\n  renderReactDom();\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}